name: Dependency Test

on:
  push:
  workflow_dispatch:
    inputs:
      env:
        description: 'Target Environment'
        required: true
        type: choice
        default: dev
        options:
          - dev
          - stg
          - prd
      module:
        description: 'Target Module'
        required: true
        type: choice
        default: all
        options:
          - all
          - common
          - func1
          - func2

run-name: "${{ github.event_name == 'workflow_dispatch' && format('Deploy {0} {1}', inputs.env, inputs.module) || format('Push: {0}', github.event.head_commit.message) }}"

jobs:
  config:
    name: Load configuration
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.load.outputs.env }}
      module: ${{ steps.load.outputs.module }}
    steps:
      - name: Load config
        id: load
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV="${{ inputs.env }}"
            MODULE="${{ inputs.module }}"
          else
            ENV=dev
            MODULE=all
          fi

          echo "env=${ENV}" >> "${GITHUB_OUTPUT}"
          echo "module=${MODULE}" >> "${GITHUB_OUTPUT}"
          cat "${GITHUB_OUTPUT}"    

  module-common:
    name: Module common
    needs: [config]
    if: !cancelled()
      && contains(fromJSON('["all", "common"]'), needs.config.outputs.module)
    runs-on: ubuntu-latest
    steps:
      - name: Display parameters
        shell: bash
        run: |
          echo "env=${{ needs.config.outputs.env }}"
          echo "module=${{ needs.config.outputs.module }}"

  module-func1:
    name: Module func1
    needs: [config, module-common]
    if: !cancelled()
      && contains(fromJSON('["all", "func1"]'), needs.config.outputs.module)
      && contains(fromJSON('["success", "skipped"]'), needs.module-common.result)
    runs-on: ubuntu-latest
    steps:
      - name: Display parameters
        shell: bash
        run: |
          echo "env=${{ needs.config.outputs.env }}"
          echo "module=${{ needs.config.outputs.module }}"

  module-func2:
    name: Module func2
    needs: [config, module-common]
    if: !cancelled()
      && contains(fromJSON('["all", "func2"]'), needs.config.outputs.module)
      && contains(fromJSON('["success", "skipped"]'), needs.module-common.result)
    runs-on: ubuntu-latest
    steps:
      - name: Display parameters
        shell: bash
        run: |
          echo "env=${{ needs.config.outputs.env }}"
          echo "module=${{ needs.config.outputs.module }}"
